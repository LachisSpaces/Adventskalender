local flow = require "ludobits.m.flow"
local playfab = require "PlayFab.PlayFabClientApi"
local IPlayFabHttps = require "PlayFab.IPlayFabHttps"
local PlayFabHttps_Defold = require "PlayFab.PlayFabHttps_Defold"

local hx = require "scripts.hashes"
local util = require "playfab.util"
local authentication = require "playfab.authentication"
local user_data = require "playfab.user_data"
local title_data = require "playfab.title_data"

function init(self)
	self.active = false
	self.userDataLoaded = false
	self.titleDataLoaded = false
	self.loginBoxVisible = false
	self.loginCode = "" 
	self.loginBoxNode = gui.get_node("LoginBox")
	-- reset the menu
	gui.set_enabled(self.loginBoxNode, false)
	-- Log into playfab
	init_playfab()
	-- Show the menu
	msg.post("#", "Login - show")
	msg.post(".", "acquire_input_focus")
end

function final(self)
	msg.post(".", "release_input_focus")
	authentication.listeners.remove(msg.url())
	title_data.listeners.remove(msg.url())
	user_data.listeners.remove(msg.url())
end

function on_message(self, message_id, message, sender)
	--print_message("MainMenu", message_id, message)
	if message_id == authentication.LOGIN_SUCCESS then
		title_data.listeners.add(msg.url())
		title_data.refresh()
		user_data.listeners.add(msg.url())
		user_data.refresh()
	elseif message_id == authentication.LOGIN_FAILED then
		title_data.clear()
		user_data.clear()
	elseif message_id == authentication.LOGOUT_SUCCESS then
		title_data.clear()
		user_data.clear()
	elseif message_id == title_data.REFRESH_SUCCESS then
		self.titleDataLoaded = true
		if (self.userDataLoaded == true) and (self.titleDataLoaded == true) then
			loadScene()
		end
	elseif message_id == user_data.REFRESH_SUCCESS then
		self.userDataLoaded = true
		if (self.userDataLoaded == true) and (self.titleDataLoaded == true) then
			loadScene()
		end
	elseif message_id == hash("Login - show") then
		show_login(self, true)
		self.active = true
	elseif message_id == hash("Login - hide") then
		show_login(self, false)
		self.active = false
	end
end

function on_input(self, action_id, action)
	if action_id == hx.Action_Touch and action.released and self.active then
		if self.loginBoxVisible == true then
			local buttonClicked = false
			local auswahl1 = gui.get_node("Auswahl1")
			local auswahl2 = gui.get_node("Auswahl2")
			local auswahl3 = gui.get_node("Auswahl3")
			local auswahl4 = gui.get_node("Auswahl4")
			local auswahl5 = gui.get_node("Auswahl5")
			if gui.pick_node(auswahl1, action.x, action.y) then
				self.loginCode = self.loginCode .. "1"
				buttonClicked = true
			elseif gui.pick_node(auswahl2, action.x, action.y) then
				self.loginCode = self.loginCode .. "2"
				buttonClicked = true
			elseif gui.pick_node(auswahl3, action.x, action.y) then
				self.loginCode = self.loginCode .. "3"
				buttonClicked = true
			elseif gui.pick_node(auswahl4, action.x, action.y) then
				self.loginCode = self.loginCode .. "4"
				buttonClicked = true
			elseif gui.pick_node(auswahl5, action.x, action.y) then
				self.loginCode = self.loginCode .. "5"
				buttonClicked = true
			end
			local codeLength = string.len(self.loginCode)
			if codeLength == 5 then
				flow(function()
					authentication.listeners.add(msg.url())
					authentication.createAccount(self.loginCode .. self.loginCode .. self.loginCode .. self.loginCode)
					show_login(self, false, "")
					end)
			elseif buttonClicked == true then
				gui.set_text(gui.get_node("LoginBoxCaption"), "LOGIN\nBitte " .. (5 - codeLength) .. " ausw√§hlen\nund Reihenfolge merken")
			end
		end
	end
end

function init_playfab()
	playfab.settings.titleId = "B7E22"
	IPlayFabHttps.SetHttp(PlayFabHttps_Defold)
	util.flow_apis()
end

function show_login(self, visible)
	if visible == true and self.loginBoxVisible == false then
		-- the login box should be visible but it is not yet 
		gui.set_enabled(self.loginBoxNode, true)
		gui.animate(self.loginBoxNode, "position.y", 200, gui.EASING_OUTBACK, 0.5, 0, loginBox_positionReached)
		self.loginBoxVisible = true
	elseif visible == false and self.loginBoxVisible == true then
		-- the login box should be invisible but it is visible still 
		gui.animate(self.loginBoxNode, "position.y", -200, gui.EASING_OUTBACK, 0.5, 0, loginBox_positionReached)
		self.loginBoxVisible = false
	end
end

function loginBox_positionReached(self, url, property)
	if self.loginBoxVisible == false then
		gui.set_enabled(self.loginBoxNode, false)
	end
end

function loadScene()
	local itemList = user_data.get("ItemList", "nothing")
	if itemList == "nothing" then
		itemList = title_data.get("ItemList", "nothing")
		user_data.set("ItemList", itemList)
	end
	msg.post("/SceneLoader#SceneLoader", "scene - load")
end